
GRANT ALL PRIVILEGES ON *.* TO bugtracker@localhost IDENTIFIED BY 'bugtracker'
WITH GRANT OPTION;

DROP DATABASE IF EXISTS bugtracker;
CREATE DATABASE IF NOT EXISTS bugtracker;

USE bugtracker;

DROP TABLE IF EXISTS BUG;
CREATE TABLE BUG(
	ID int NOT NULL,
	SUMMARY VARCHAR(250),
	DESCRIPTION VARCHAR(4000),
	ASSIGNEE int,
	PRIORITY int,
	STATUS int,
	CREATEDDATE date,
	LASTUPDATEDATE date,
	PRIMARY KEY (ID)
);



DROP TABLE IF EXISTS USERS;
CREATE TABLE USERS(
	ID int NOT NULL,
	USERNAME VARCHAR(40) NOT NULL UNIQUE,
	EMAIL VARCHAR(200),
	PASSWORDHASH VARCHAR(256) NOT NULL,
	PRIMARY KEY (ID)
);



DROP TRIGGER IF EXISTS bug_creation_trigger;
CREATE TRIGGER bug_creation_trigger BEFORE INSERT ON bug
FOR EACH ROW
SET NEW.CREATEDDATE = NOW(), NEW.LASTUPDATEDATE = NOW();

DROP TRIGGER IF EXISTS bug_update_trigger;
CREATE TRIGGER bug_update_trigger BEFORE UPDATE ON bug
FOR EACH ROW
SET NEW.LASTUPDATEDATE = NOW();

DROP TABLE IF EXISTS PRIORITY;
CREATE TABLE PRIORITY(
	ID int NOT NULL,
	PRIORITY VARCHAR(20)
);	


INSERT INTO PRIORITY (ID, PRIORITY) VALUES (1, 'LOW');
INSERT INTO PRIORITY (ID, PRIORITY) VALUES (2, 'MEDIUM');
INSERT INTO PRIORITY (ID, PRIORITY) VALUES (3, 'HIGH');


DROP TABLE IF EXISTS STATUS;
CREATE TABLE STATUS(
	ID int NOT NULL,
	STATUS VARCHAR(20)
);


INSERT INTO STATUS (ID, STATUS) VALUES (1, 'OPEN');
INSERT INTO STATUS (ID, STATUS) VALUES (2, 'IN PROGRESS');
INSERT INTO STATUS (ID, STATUS) VALUES (3, 'CLOSE');

